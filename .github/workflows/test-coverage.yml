name: Update Test Coverage

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    runs-on: macOS-15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Show available Xcode versions
        run: ls /Applications | grep Xcode

      - name: Use latest available Xcode version
        run: sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer

      - name: Show available schemes
        run: xcodebuild -list

      - name: Resolve Swift Package Dependencies
        run: xcodebuild -resolvePackageDependencies

      - name: Build Tests
        run: |
          xcodebuild build \
            -project Weather.xcodeproj \
            -scheme NetworkingTests \
            -destination 'platform=iOS Simulator,name=iPhone 16' \
            | tee xcodebuild.log

      - name: Run tests with coverage
        run: |
          xcodebuild test \
            -project Weather.xcodeproj \
            -scheme NetworkingTests \
            -destination 'platform=iOS Simulator,name=iPhone 16' \
            -enableCodeCoverage YES \
            -resultBundlePath TestResults.xcresult | tee xcodebuild.log
        continue-on-error: true

      - name: Debug test failure (if any)
        if: failure()
        run: cat xcodebuild.log

      - name: Verify coverage data
        run: |
          if ! [ -d "TestResults.xcresult" ]; then
            echo "❌ Test results not found. Check test logs."
            exit 1
          fi
          if ! xcrun xccov view --report TestResults.xcresult > /dev/null 2>&1; then
            echo "❌ No coverage data found. Ensure tests are generating coverage."
            exit 1
          fi

      - name: Extract coverage data
        run: |
          mkdir -p coverage
          xcrun xccov view --report --json TestResults.xcresult > coverage/coverage.json

      - name: Commit and push coverage report
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add coverage/coverage.json
          git commit -m "Update test coverage report" || exit 0
          git push
